name: '2.x: Ubuntu - Build and push ce-dev and ce-dev-controller images'

# Run this workflow only on a push/merged PR to branch 1.x with valid tags
on:
  push:
    tags:
      - 2.[0-9]+
  workflow_dispatch:
    tags:
      - 2.[0-9]+

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: '2.x'
      - name: Install modules
        run: yarn install --production=false --global
      - name: Pack the JS
        run: yarn oclif pack tarballs --targets=linux-x64,linux-arm,linux-arm64,darwin-x64,darwin-arm64 --no-xz
      - name: Rename the dist/* files
        run: yarn renamedist
      - name: Install test dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full libnss3-tools wget
          cd /tmp
          wget https://go.dev/dl/go1.22.1.linux-amd64.tar.gz
          sudo tar -C /usr/local -xzf go1.22.1.linux-amd64.tar.gz
          export PATH=$PATH:/usr/local/go/bin
          git clone https://github.com/FiloSottile/mkcert && cd mkcert
          go build -ldflags "-X main.Version=$(git describe --tags)"
          sudo mv ./mkcert /usr/local/bin && cd ../
          sudo chmod +x /usr/local/bin/mkcert
          rm -Rf mkcert
          mkdir -p ~/.config/ce-dev
          touch ~/.config/ce-dev/preferences-2.x.yml
          echo 'docker_bin: docker' > ~/.config/ce-dev/preferences-2.x.yml
          echo 'docker_compose_bin: docker compose' >> ~/.config/ce-dev/preferences-2.x.yml
          echo 'mkcert_bin: mkcert' >> ~/.config/ce-dev/preferences-2.x.yml
      - name: Build ce-dev and ce-dev-controller
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          /bin/sh docker-images/export.sh --version 2.x --image-name ce-dev --dockerfile-path base --push
          /bin/sh docker-images/export.sh --version 2.x --image-name ce-dev-controller --dockerfile-path controller --push
      - name: Publish new ce-dev binaries
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/**
          body_path: RELEASE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
